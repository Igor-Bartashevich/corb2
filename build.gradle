plugins {
    id 'java' 
    id 'com.github.johnrengelman.shadow' version '1.2.3'
    id "maven-publish"
    id "eclipse"
    id "idea"
    id "jacoco"
    id "com.jfrog.bintray" version "1.6"
}

sourceCompatibility = '1.6'
targetCompatibility = '1.6'

repositories {
    jcenter()
    maven { url 'http://developer.marklogic.com/maven2/' }
    flatDir {
        dirs 'src/test/resources/'
    }
}

dependencies {
    compile 'com.marklogic:marklogic-xcc:8.0.5'
    compile 'com.google.code.externalsortinginjava:externalsortinginjava:0.1.9'
    // if you want to compile without testing comment out the lines below
    testCompile group: 'junit', name: 'junit', version: '4+'
    testCompile 'org.jasypt:jasypt:1.9.2'
    testCompile 'com.github.stefanbirkner:system-rules:1.13.0' //facilitates tests for methods that invoke System.exit
    testCompile 'org.mockito:mockito-all:1.+'
}

test {
    testLogging {
        events 'started','passed'
    }  
}

//disabling, because we want to incorporate externalsortingjava in uber jar and use as the artifact
jar.enabled = false
shadowJar {
    dependencies {
        include(dependency('com.google.code.externalsortinginjava:externalsortinginjava:.*'))
    }
    //generate same name as the jar task would
    archiveName = "${baseName}-${version}.${extension}"
}
build.dependsOn(shadowJar);

task sourcesJar(type: Jar, dependsOn: classes) {
    description = "Create a JAR of source files; required by bintray for publishing"
    classifier 'sources' 
    from sourceSets.main.allJava
}

publishing {
    publications {
        mainJava(MavenPublication) {
            from components.java
        }
        sourcesJava(MavenPublication) {
            from components.java
            artifact sourcesJar
        }
    }
}

/*
 * In order to publish to bintray, you need an account. Once you have that account, set myBintrayUser and myBintrayKey
 * to your username and key. You can do that in the project gradle.properties file, but it's better to do so in your
 * ~/.gradle/gradle.properties file. Once you do that, you can run "gradle -i bintray" to publish it to bintray.
 */
if (project.hasProperty("myBintrayUser")) {
    bintray {
        user = myBintrayUser
        key = myBintrayKey
        publications = ['mainJava', 'sourcesJava']
        //dryRun = true
        pkg {
            repo = 'maven'
            name = project.name
            licenses = ['Apache-2.0']
            userOrg = 'marklogic'
            websiteUrl = 'https://github.com/marklogic/corb2'
            issueTrackerUrl = 'https://github.com/marklogic/corb2/issues'
            vcsUrl = 'https://github.com/marklogic/corb2.git'
            githubRepo = 'marklogic/corb2' 
            githubReleaseNotesFile = 'README.md'
            version {
                name = project.version
                released = new Date()
            }
        }
    }
}
